using System;
using System.IO;

using Amazon.S3;
using Amazon.S3.Model;
using System.Threading.Tasks;

namespace awss3
{
    class S3Sample
    {
        //secretid
        private const string accessKey = "your id";
        //secretkey
        private const string secretKey = "your key";

        //注意bucketName是bucketname+appid
        private static string bucketName = "mynewbucket-1255669336";
        private static string keyName = "test.txt";

        private static AmazonS3Client client;
        private static AmazonS3Config config;
        public static void Main(string[] args)
        {
            config = new AmazonS3Config();

            //注意要将<region>替换为相对应的region，如ap-beijing，ap-guangzhou...
            config.ServiceURL = "http://cos.ap-guangzhou.myqcloud.com";
            // 目前只能使用AWS Signagure 版本 2
            config.SignatureVersion = "2";

            client = new AmazonS3Client(
                    accessKey,
                    secretKey,
                    config
                    );

            Console.WriteLine("----------------------------------");

            // Call List buckets
            ListBucket().Wait();
            Console.WriteLine("----------------------------------");
            Console.WriteLine();

            // Call Put Bucket
            PutBucketAsync().Wait();
            Console.WriteLine("----------------------------------");
            Console.WriteLine();

            // Call Put Object
            PutObjectAsync().Wait();
            Console.WriteLine("----------------------------------");
            Console.WriteLine();

            // Call List Objects
            ListObjectsAysnc().Wait();
            Console.WriteLine("----------------------------------");
            Console.WriteLine();

            // Call Get Object
            GetObjectAsync().Wait();
            Console.WriteLine("----------------------------------");
            Console.WriteLine();

            // Call Delete Object
            DeleteObjectNonVersionedBucketAsync().Wait();
            Console.WriteLine("----------------------------------");
            Console.WriteLine();
        }

        /*
         * List Bucket
         */
        static async Task ListBucket() {
            Console.WriteLine("List Bucket start......");

            //注意：listBuckets需要重新设置ServiceURL
            AmazonS3Config config2 = new AmazonS3Config();
            config2.SignatureVersion = "2";

            config2.ServiceURL = "http://service.cos.myqcloud.com";
            AmazonS3Client client2 = new AmazonS3Client(
                    accessKey,
                    secretKey,
                    config2
                    );
            try
            {
                ListBucketsResponse response = await client2.ListBucketsAsync();
                foreach (S3Bucket b in response.Buckets)
                {
                    Console.WriteLine("{0}\t{1}", b.BucketName, b.CreationDate);
                }

                Console.WriteLine("List Bucket Success......");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }


        /*
         * Put Bucket
         */
        static async Task PutBucketAsync() {
            // Put Bucket
            Console.WriteLine("Put Bucket start......");
            try
            {
                var putBucketRequest = new PutBucketRequest
                {
                    BucketName = bucketName,
                    BucketRegionName = "ap-guangzhou"
                };

                PutBucketResponse putBucketResponse = await client.PutBucketAsync(putBucketRequest);
                Console.WriteLine("Put Bucket Success......");
            }
            catch (AmazonS3Exception e)
            {
                Console.WriteLine("Error encountered on server. Message:'{0}' when putting bucket", e.Message);
                Console.WriteLine(e.RequestId);
            }
            catch (Exception e)
            {
                Console.WriteLine("Unknown encountered on server. Message:'{0}' when putting bucket", e.Message);
            }
        }

        /*
         * List Object
         */
        static async Task ListObjectsAysnc() {
            // List Objects
            Console.WriteLine("List Object start......");

            try
            {
                ListObjectsV2Request request = new ListObjectsV2Request
                {
                    BucketName = bucketName,
                    MaxKeys = 10
                };
                ListObjectsV2Response response;
                do
                {
                    response = await client.ListObjectsV2Async(request);

                    // Process the response.
                    foreach (S3Object entry in response.S3Objects)
                    {
                        Console.WriteLine("key = {0} size = {1} last_modified = {2}", entry.Key, entry.Size, entry.LastModified);
                    }
                    Console.WriteLine("Next Continuation Token: {0}", response.NextContinuationToken);
                    request.ContinuationToken = response.NextContinuationToken;
                } while (response.IsTruncated);

                Console.WriteLine("List Object Success......");
            }
            catch (AmazonS3Exception e)
            {
                Console.WriteLine("S3 error occurred. Exception: " + e.ToString());
                Console.ReadKey();
                Console.WriteLine(e.RequestId);
            }
            catch (Exception e)
            {
                Console.WriteLine("Exception: " + e.ToString());
                Console.ReadKey();
            }
        }

        /*
         * Put Object
         */
        static async Task PutObjectAsync() 
        {
            // Put Object
            Console.WriteLine("Put Object start......");

            try
            {
                // 1. Put object-specify only key name for the new object.
                var request = new PutObjectRequest
                {
                    BucketName = bucketName,
                    Key = keyName,
                    ContentBody = "sample text",
                    ContentType = "text/plain"
                };

                PutObjectResponse response = await client.PutObjectAsync(request);
                Console.WriteLine("Put Object Success......");
            }
            catch (AmazonS3Exception e)
            {
                Console.WriteLine("Error encountered ***. Message:'{0}' when writing an object", e.Message);
                Console.WriteLine("RequestId:'{0}'", e.RequestId);
            }
            catch (Exception e)
            {
                Console.WriteLine("Unknown encountered on server. Message:'{0}' when writing an object", e.Message);
            }
        }

        /*
         * Get Object
         */
        static async Task GetObjectAsync()
        {
            // Get Object
            Console.WriteLine("Get Object start......");

            string responseBody = "";
            try
            {
                GetObjectRequest request = new GetObjectRequest
                {
                    BucketName = bucketName,
                    Key = keyName
                };
                using (GetObjectResponse response = await client.GetObjectAsync(request))
                using (Stream responseStream = response.ResponseStream)
                using (StreamReader reader = new StreamReader(responseStream))
                {
                    string title = response.Metadata["x-amz-meta-title"]; // Assume you have "title" as medata added to the object.
                    string contentType = response.Headers["Content-Type"];
                    Console.WriteLine("Object metadata, Title: {0}", title);
                    Console.WriteLine("Content type: {0}", contentType);

                    responseBody = reader.ReadToEnd(); // Now you process the response body.
                }
                Console.WriteLine("Get Object Success......");
            }
            catch (AmazonS3Exception e)
            {
                Console.WriteLine("Error encountered ***. Message:'{0}' when getting an object", e.Message);
                Console.WriteLine("RequestId:'{0}'", e.RequestId);
            }
            catch (Exception e)
            {
                Console.WriteLine("Unknown encountered on server. Message:'{0}' when getting an object", e.Message);
            }
        }

        static async Task DeleteObjectNonVersionedBucketAsync()
        {
            // Delete Object
            Console.WriteLine("Delete Object start......");
            try
            {
                var deleteObjectRequest = new DeleteObjectRequest
                {
                    BucketName = bucketName,
                    Key = keyName
                };

                Console.WriteLine("Deleting an object");
                await client.DeleteObjectAsync(deleteObjectRequest);
            }
            catch (AmazonS3Exception e)
            {
                Console.WriteLine("Error encountered on server. Message:'{0}' when deleting an object", e.Message);
                Console.WriteLine("RequestId:'{0}'", e.RequestId);
            }
            catch (Exception e)
            {
                Console.WriteLine("Unknown encountered on server. Message:'{0}' when deleting an object", e.Message);
            }
        }
    }
}
